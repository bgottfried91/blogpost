---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  labels:
    app: httpd-combined
  name: httpd-combined
  namespace: bgottfri
  selfLink: /apis/extensions/v1beta1/namespaces/bgottfri/deployments/httpd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: httpd-combined
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: httpd-combined
    spec:
      containers:
      - image: rhscl/httpd-24-rhel7
        imagePullPolicy: Always
        name: httpd
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: "true"
  creationTimestamp: null
  labels:
    app: httpd-combined
  name: httpd-combined
  namespace: bgottfri
  selfLink: /apis/route.openshift.io/v1/namespaces/bgottfri/routes/httpd
spec:
  host: httpd-bgottfri.apps.cluster-1234-0007.1234-0007.example.opentlc.com
  port:
    targetPort: 8080
  to:
    kind: Service
    name: httpd-combined
    weight: 100
  wildcardPolicy: None
status:
  ingress:
    - conditions:
      - status: 'True'
        type: Admitted
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: httpd-combined
  name: httpd-combined
  namespace: bgottfri
  selfLink: /api/v1/namespaces/bgottfri/services/httpd-private-repo
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: httpd-combined
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}